{"version":3,"names":[],"mappings":"","sources":["channel.js"],"sourcesContent":["class Channel {\n  constructor(peer, channel, channelHandler) {\n    this._channel = channel;\n    this._peer = peer;\n\n    this.attachHandler(channelHandler);\n  }\n\n  send(data) { this._channel.send(data); }\n  sendJSON(data) { this._channel.send(JSON.stringify(data)); }\n\n  get label() { return this._channel.label; }\n  get channel() { return this._channel; }\n  get peer() { return this._peer; }\n\n  attachHandler(channelHandler) {\n    if (typeof channelHandler === 'function') channelHandler = channelHandler(this._channel);\n\n    this.on(channelHandler || {});\n  }\n\n  /*\n  +  Event Handling\n  */\n  on(event, listener) {\n    if (typeof event == 'object') {\n      for (var eventName in event) this.on(eventName, event[eventName]);\n      return;\n    }\n\n    this._channel.addEventListener(event, event => listener(this, event));\n\n    return this;\n  }\n  /*\n  -  Event Handling\n  */\n}\n\nexport {Channel};"],"file":"channel.js","sourceRoot":"/source/"}